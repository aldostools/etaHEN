#pragma once
#ifndef KDLSYM_H
#define KDLSYM_H

#include <stdint.h>

typedef enum {
    KERNEL_SYM_TEXT_END,
    KERNEL_SYM_DMPML4I,
    KERNEL_SYM_DMPDPI,
    KERNEL_SYM_PML4PML4I,
    KERNEL_SYM_PMAP_STORE,
    KERNEL_SYM_DATA_CAVE,
    KERNEL_SYM_PRINTF,
    KERNEL_SYM_SCESBLAUTHMGRISLOADABLE2,
    KERNEL_SYM_SCESBLAUTHMGRGETSELFINFO,
    KERNEL_SYM_SCESBLACMGRGETPATHID,
    KERNEL_SYM_M_TEMP,
    KERNEL_SYM_MALLOC,
    KERNEL_SYM_FREE,
    KERNEL_SYM_MINI_SYSCORE_BIN,
    KERNEL_SYM_SCESBLAUTHMGRVERIFYHEADER,
    KERNEL_SYM_SCESBLSERVICEMAILBOX,
    KERNEL_SYM_CTXTABLE_MTX,
    KERNEL_SYM_CTXSTATUS,
    KERNEL_SYM_CTXTABLE,
    KERNEL_SYM_MTX_LOCK_FLAGS,
    KERNEL_SYM_MTX_UNLOCK_FLAGS,
    KERNEL_SYM_RW_MEM,
    KERNEL_SYM_ALLPROC,
    KERNEL_SYM_VM_MAP_LOCK_READ,
    KERNEL_SYM_VM_MAP_UNLOCK_READ,
    KERNEL_SYM_VM_MAP_LOOKUP_ENTRY,
    KERNEL_SYM_BNET_CRYPTO_AES_CBC_CFB128_ENCRYPT,
    KERNEL_SYM_BNET_CRYPTO_AES_CBC_CFB128_DECRYPT,
    KERNEL_SYM_FPU_KERN_ENTER,
    KERNEL_SYM_FPU_KERN_LEAVE,
    KERNEL_SYM_LACACRYPTO_RSADPCRT_CORE,
    KERNEL_SYM_SHA256_HMAC,
    KERNEL_SYM_SCE_SBL_SERVICE_CRYPT_ASYNC,
    KERNEL_SYM_SCE_SBL_FINALIZE_CRYPT_ASYNC,
    KERNEL_SYM_SYS_FOPEN,
    KERNEL_SYM_DEVACTIOCTL,
    KERNEL_SYM_MAX,
} ksym_t;

void init_kdlsym(uint64_t fw_ver, uint64_t kernel_base);
uint64_t get_fw_version();
uint64_t kdlsym(ksym_t sym);
uint64_t ktext(uint64_t offset);

#endif // KDLSYM_H